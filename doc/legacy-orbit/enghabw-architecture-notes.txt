I've tried to describe the structure of variables in enghabw here.

------- Patrick's understanding of the switch(i, x) and other fields ----------------------

switch(i, 5)   0 or 1, representing something being on. In a hot start, switch(38, 5) = 1 which represents REACT INJ1 being on.
switch(i, 6)   is the resistance of a device
switch(i, 8)   is the temperature of a device
switch(i, 11)  is a bitmask of what coolants a device is connected to
switch(i, 12)  is a coefficient that models how much power a device loses to resistive
               heating
switch(i, 13)  is a scaling factor for how quickly a device passively loses heat to the
               environment
switch(i, 14)  is some sort of thermal conductivity between device and coolant 2
switch(i, 15)  is some sort of thermal conductivity between device and coolant 1 or 3 or
               the atmosphere
switch(i, 16)  is the 'resting' temperature above which a device will cool faster

other switch values aren't relevant for temperature

coolant(i, 0)  is the temperature of coolant loop i
coolant(i, 1)  how quickly a loop is being cooled by radiators/atmosphere
coolant(i, 2)  is how quickly a loop gets cooled by the atmosphere

RAD(i, 0)      Is how good at cooling a radiator is
RAD(i, 1)      Which coolant loop a radiator is connected to

coolantPUMP(i) is a bitmask of coolant pumps connected to coolant loop i.
               0 for none, 1 for the secondary hab pumps, 2 for the primary, 3 for both
               coolant loop 3 only has one pump

DEVICEs%(i)    Simulators use this array to inject various faults

source(1, 1)   Internal resistance of the hab reactor, set to .00025
source(2, 1)   Internal resistance of the fuel cell, set to .00325
source(3, 1)   Internal resistance of 2ndary bus battery, set to .0085
source(4, 1)   Internal resistance of 3rtiary bus battery, set to .0085
source(5, 1)   Internal resistance of the ayse reactor, set to .00003

EL(1)          is the current drawn from the hab reactor
EL(2, 3, 4, 5) ditto, for fuel cell, battery, eecom battery, ayse reactor, respectively

EL(6)          is the voltage of the main hab power bus
EL(7)          is the voltage of the secondary hab power bus
EL(11 -> 14)   are the currents present on the hab primary/secondary/tertiary and ayse power buses

------- Patrick's understanding of the code at label 850 and 860 ---------
The subroutine at 850 and 852 calculates heat gain due to resistive heating, and also heat
loss to passive and active cooling.

Resistive heating is a very small coefficient, between 1e-8 and 1e-10. Simulators can
increase the resistive heating using SWITCHs%(dev).

delTEMP1 calculates passive heat loss from the device to the environment, without coolant
delTEMP2 calculates cooling from coolant loop 1
delTEMP3 calculates cooling from coolant loop 2
delTEMP4 calculates cooling from the atmosphere
delTEMP5 calculates cooling from coolant loop 3

If the device is above its 'target' resting temperature (e.g. 25), it will cool slightly
faster.

A device cools much faster if it is very hot (all delTEMPs are multiplied by the square of
the device's temperature)

Every 1 degree that coolant cools a device by, the coolant increases by 1*k degrees (where
k is the relevant thermal conductivity factor for the device)


The subroutine at 860 and 861 calculates the radiators cooling off the coolant.

The primary hab coolant pumps power off if the primary hab power bus is less than 9000 V.
Same for secondary coolant pumps if secondary bus is less than 90 V, and AYSE with less
than 90,000 V.

Simmies can selectively disable radiators.

Coolant is cooled by radiators and atmosphere. Coolant cooling rate increases
quadratically with coolant temperature.





--------- Patrick's understanding of how current/voltage/resistance is calculated for components -----------

When I first thought about designing OrbitX's power grid, I was thinking I should do it in terms of
calculating the power draw of components *first*, then seeing if that power draw can be supported.

However, it seems like enghabw calculates the power/voltage of its power buses first, *then* each component
calculates how much current/power it draws.

For example, around line 662 the engines calculate their power draw along the lines of:

if engines_on:
  current = main_bus_voltage / switch(engine_index, 6)
  power = main_bus_voltage * current

The internal resistance of all components are calculated like this, then summed up with the parallel
circuit resistance equation of 1/Rt = 1/R1 + 1/R2 + ... + 1/Rn

Then, enghabw somehow uses this total resistance to calculate how much power the hab reactor should be putting out.

voltage is the same across all components (because it's a parallel circuit, oops!) and the
voltages of power sources are roughly constant and hardcoded. For example, the hab reactor
puts out 10,000 V while the fuel cell and hab batteries put out 120 V. AYSE battery also gives 10 kV.

However! Putting load onto a power bus will actually _reduce_ the voltage. This is shown on line 1452 of enghabw.bas, which calculates the voltage of the hab primary power bus i.e. EL(6):
    EL(6) = (V1out * Ibus1R / EL(11)) + (random other stuff accounting for if other buses are powered, which we'll ignore)
If we assume that only the Hab primary power bus is powered, EL(6) reduces to simply EL(6) = V1out.
V1out is calculated a few lines earlier, as
    V1out = Vr - (EL(1) * R2#)
Where EL(1) is how much power is being drawn by electrical components from the Hab's reactor,
R2# = 0.000025 Ohms, and Vr = 10,000 V (the voltage the reactor puts out).

Therefore, the voltage of the Hab power bus under almost no load is
    EL(6) = V1out = 10,000 V - [tiny number] *  0.000025 = 10,000 V
i.e. the Hab power bus will have 10 kV across it without load. If we add 77,777 A of load:
    EL(6) = V1out = 10,000 V - 77,777*0.000025 = 9,998 V
Therefore there's a small amount of voltage lost. I think this is due to thermal power dissipation?

Ok. Let's put this all together.

Parallel circuits have:
- the same voltage across all components in the circuit as the source's voltage (power dissipation affects this)
- the sum of amperages across all components drawing load equals the source's amperage
- the total resistance is the sum of the inverse of each component's resistance i.e. 1/Rt = 1/R1 + 1/R2 + ... + 1/Rn

So to solve the circuit for a single power source (a 10,000 V hab reactor), we can:

1. Sum up the inverse of the resistances of each component (e.g. RAD shields will be a constant * how much radiation there is * how much they're turned on, engines will be a constant * throttle, etc) to find 1/Rt
2. Calculate the voltage of the entire circuit by doing 10,000V / (Rt + 0.000025) = Voltage of circuit
3. Now that we have the voltage and resistance for everything, we can Ohm's law to find the current: I = V/R for any component.